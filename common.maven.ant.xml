<?xml version="1.0"?>
<!--
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project name="common.maven" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

  <!-- there server id in the Maven settings.xml -->
  <property name="maven-snapshots-repository-id" value="sonatype-nexus-snapshots" />
  <property name="maven-snapshots-repository-url" value="https://oss.sonatype.org/content/repositories/snapshots/" />

  <!-- there server id in the Maven settings.xml -->
  <property name="maven-staging-repository-id" value="sonatype-nexus-staging" />
  <property name="maven-staging-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />

  <macrodef name="deploy">
    <attribute name="pom" />
    <attribute name="file" />
    <sequential>
      <property name="pom" location="@{pom}" />
      <property name="file" location="@{file}" />
      <condition property="pom.exists">
        <and>
          <available file="${pom}" />
        </and>
      </condition>
      <condition property="file.exists">
        <and>
          <available file="${file}" />
        </and>
      </condition>
      <fail unless="pom.exists" message="Could not find ${pom}" />
      <fail unless="file.exists" message="Could not find ${file}" />
      <artifact:mvn>
        <arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
        <arg value="-Durl=${maven-snapshots-repository-url}" />
        <arg value="-DrepositoryId=${maven-snapshots-repository-id}" />
        <arg value="-DpomFile=@{pom}" />
        <arg value="-Dfile=@{file}" />
      </artifact:mvn>
    </sequential>
  </macrodef>

  <macrodef name="stage">
    <attribute name="pom" />
    <attribute name="file" />
    <sequential>
      <property name="pom" location="@{pom}" />
      <property name="file" location="@{file}" />
      <condition property="pom.exists">
        <and>
          <available file="${pom}" />
        </and>
      </condition>
      <condition property="file.exists">
        <and>
          <available file="${file}" />
        </and>
      </condition>
      <fail unless="pom.exists" message="Could not find ${pom}" />
      <fail unless="file.exists" message="Could not find ${file}" />
      <artifact:mvn>
        <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
        <arg value="-Durl=${maven-staging-repository-url}" />
        <arg value="-DrepositoryId=${maven-staging-repository-id}" />
        <arg value="-DpomFile=@{pom}" />
        <arg value="-Dfile=@{file}" />
        <arg value="-Pgpg" />
      </artifact:mvn>
    </sequential>
  </macrodef>

  <macrodef name="stage.classifier">
    <attribute name="pom" />
    <attribute name="file" />
    <attribute name="classifier" />
    <sequential>
      <property name="pom" location="@{pom}" />
      <property name="file" location="@{file}" />
      <condition property="pom.exists">
        <and>
          <available file="${pom}" />
        </and>
      </condition>
      <condition property="file.exists">
        <and>
          <available file="${file}" />
        </and>
      </condition>
      <condition property="classifier.check">
        <or>
          <equals arg1="@{classifier}" arg2="sources" />
          <equals arg1="@{classifier}" arg2="javadoc" />
        </or>
      </condition>
      <fail unless="pom.exists" message="Could not find ${pom}" />
      <fail unless="file.exists" message="Could not find ${file}" />
      <fail unless="classifier.check" message="Illegal classifier value @{classifier}" />
      <artifact:mvn>
        <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
        <arg value="-Durl=${maven-staging-repository-url}" />
        <arg value="-DrepositoryId=${maven-staging-repository-id}" />
        <arg value="-DpomFile=@{pom}" />
        <arg value="-Dfile=@{file}" />
        <arg value="-Dclassifier=@{classifier}" />
        <arg value="-Pgpg" />
      </artifact:mvn>
    </sequential>
  </macrodef>

</project>
